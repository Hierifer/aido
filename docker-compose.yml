services:
  # Web 应用服务
  gateway:
    image: nginx:alpine  # 使用官方 Nginx 镜像
    ports:
      - "81:80"  # 端口映射：宿主机 81 → 容器 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # 挂载配置文件
    networks:
      - CORE-NETWORK  # 使用 CORENETWORK 网络
    depends_on:
      - web
      - biz
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  web:
    build: 
      context: ./web  # 使用 web 目录下的 Dockerfile 构建镜像
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # 端口映射：宿主机 8080 → 容器 8080
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    networks:
      - CORE-NETWORK  # 使用 CORENETWORK 网络
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s


  # 应用服务
  biz:
    build: 
      context: ./biz  # 使用 biz 目录下的 Dockerfile 构建镜像
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # 端口映射：宿主机 3000 → 容器 3000
    environment:
      - DB_HOST=db  # 环境变量配置
      - DB_NAME=mydb
      - DB_USER=admin
      - DB_PASSWORD=123123123
      - REDIS_HOST=redis
      - REDIS_PASSWORD=redispassword123
    networks:
      - CORE-NETWORK  # 使用 CORENETWORK 网络
    depends_on:
      - db  # 先启动 db 服务
      - redis
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/ping || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 30s

  # 数据库服务
  db:
    image: mysql:8.0  # 使用官方 MySQL 镜像
    ports:
      - "3306:3306"  # 端口映射：宿主机 3306 → 容器 3306
    volumes:
      - db-data:/var/lib/mysql  # 持久化数据卷
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql  # 初始化脚本
    environment:
      - MYSQL_ROOT_PASSWORD=root123456
      - MYSQL_DATABASE=mydb
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=123123123
    networks:
      - CORE-NETWORK  # 使用 CORENETWORK 网络
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot123456"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 45s

  redis:
    image: redis:alpine  # 使用官方 Redis 镜像
    ports:
      - "6379:6379"  # 端口映射：宿主机 6379 → 容器 6379
    command: redis-server --requirepass redispassword123 --appendonly yes --protected-mode yes --port 6379 --bind 0.0.0.0
    environment:
      - REDIS_PASSWORD=redispassword123
    volumes:
      - redis-data:/data  # 持久化数据
    networks:
      - CORE-NETWORK  # 使用 CORENETWORK 网络
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispassword123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  db-data:  # 定义数据卷
  redis-data:  # Redis 数据卷

networks:
  CORE-NETWORK:  # 定义网络

